"""init-migration

Revision ID: 0f40642bc434
Revises: 
Create Date: 2025-06-02 08:16:28.909136

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0f40642bc434'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('outbox_events',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('parcel_id', sa.String(length=36), nullable=True),
    sa.Column('session_id', sa.String(length=36), nullable=True),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('payload', sa.JSON(), nullable=True),
    sa.Column('applied', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('published_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_outbox_events_event_type'), 'outbox_events', ['event_type'], unique=False)
    op.create_index(op.f('ix_outbox_events_parcel_id'), 'outbox_events', ['parcel_id'], unique=False)
    op.create_index(op.f('ix_outbox_events_session_id'), 'outbox_events', ['session_id'], unique=False)
    op.create_table('parcel_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('parcels',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('session_id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('weight_kg', sa.Float(), nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('cost_adjustment_usd', sa.Float(), nullable=False),
    sa.Column('delivery_price_rub', sa.Float(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['parcel_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'session_id', name='uq_parcels_name_session')
    )
    op.create_index(op.f('ix_parcels_company_id'), 'parcels', ['company_id'], unique=False)
    op.create_index(op.f('ix_parcels_created_at'), 'parcels', ['created_at'], unique=False)
    op.create_index(op.f('ix_parcels_delivery_price_rub'), 'parcels', ['delivery_price_rub'], unique=False)
    op.create_index(op.f('ix_parcels_name'), 'parcels', ['name'], unique=False)
    op.create_index('ix_parcels_session_created', 'parcels', ['session_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_parcels_session_id'), 'parcels', ['session_id'], unique=False)
    op.create_index('ix_parcels_session_type', 'parcels', ['session_id', 'type_id'], unique=False)
    op.create_index(op.f('ix_parcels_type_id'), 'parcels', ['type_id'], unique=False)

    op.execute("""
            INSERT INTO parcel_types (id, name)
            VALUES
                (1, 'одежда'),
                (2, 'электроника'),
                (3, 'разное')
            ON DUPLICATE KEY UPDATE name=VALUES(name)
        """)

    op.execute("""
        INSERT INTO companies (id, name, description, created_at)
        VALUES
            (1, 'Boxberry', 'Российская логистическая компания', CURRENT_TIMESTAMP),
            (2, 'CDEK', 'Курьерская служба доставки', CURRENT_TIMESTAMP),
            (3, 'DPD', 'Международная служба доставки', CURRENT_TIMESTAMP)
        ON DUPLICATE KEY UPDATE
            name = VALUES(name),
            description = VALUES(description),
            created_at = VALUES(created_at)
    """)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_parcels_type_id'), table_name='parcels')
    op.drop_index('ix_parcels_session_type', table_name='parcels')
    op.drop_index(op.f('ix_parcels_session_id'), table_name='parcels')
    op.drop_index('ix_parcels_session_created', table_name='parcels')
    op.drop_index(op.f('ix_parcels_name'), table_name='parcels')
    op.drop_index(op.f('ix_parcels_delivery_price_rub'), table_name='parcels')
    op.drop_index(op.f('ix_parcels_created_at'), table_name='parcels')
    op.drop_index(op.f('ix_parcels_company_id'), table_name='parcels')
    op.drop_table('parcels')
    op.drop_table('parcel_types')
    op.drop_index(op.f('ix_outbox_events_session_id'), table_name='outbox_events')
    op.drop_index(op.f('ix_outbox_events_parcel_id'), table_name='outbox_events')
    op.drop_index(op.f('ix_outbox_events_event_type'), table_name='outbox_events')
    op.drop_table('outbox_events')
    op.drop_table('companies')
    # ### end Alembic commands ###
